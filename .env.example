# =============================================================================
# AI Provider Configuration
# =============================================================================
# Configure ONE or MORE of the following AI providers by setting the required variables
# The application supports all providers simultaneously with user selection
# Priority: Claude > OpenAI > Gemini > Groq > Azure OpenAI > Qwen (default)

# -----------------------------------------------------------------------------
# Option 1: Claude (Anthropic) - Recommended for complex clinical reasoning
# -----------------------------------------------------------------------------
# Get your API key from Anthropic Console
# https://console.anthropic.com/

# ANTHROPIC_API_KEY=
# CLAUDE_MODEL=claude-3-5-sonnet-20241022
# Available models: 
#   - claude-3-5-sonnet-20241022 (best for complex analysis)
#   - claude-3-opus-20240229 (highest quality)
#   - claude-3-sonnet-20240229 (balanced)
#   - claude-3-haiku-20240307 (fastest)
# CLAUDE_MAX_TOKENS=4096
# CLAUDE_TEMPERATURE=0.3

# -----------------------------------------------------------------------------
# Option 2: OpenAI - GPT-4o and GPT-4o-mini models
# -----------------------------------------------------------------------------
# Get your API key from OpenAI Platform
# https://platform.openai.com/api-keys

# OPENAI_API_KEY=
# OPENAI_MODEL=gpt-4o
# Available models:
#   - gpt-4o (best quality, GPT-4 Optimized)
#   - gpt-4o-mini (faster, more affordable)
#   - gpt-4-turbo (high performance)
#   - gpt-4 (legacy)
# OPENAI_MAX_TOKENS=4096
# OPENAI_TEMPERATURE=0.3

# -----------------------------------------------------------------------------
# Option 3: Google Gemini (via AI Studio)
# -----------------------------------------------------------------------------
# Get your API key from Google AI Studio
# https://aistudio.google.com/app/apikey

# GOOGLE_GEMINI_API_KEY=
# GEMINI_MODEL=gemini-2.0-flash-exp
# Available models: 
#   - gemini-2.0-flash-exp (latest, fastest, experimental)
#   - gemini-1.5-flash (fast, cost-effective)
#   - gemini-1.5-pro (best quality)
# GEMINI_MAX_TOKENS=8192
# GEMINI_TEMPERATURE=0.3

# -----------------------------------------------------------------------------
# Option 4: Groq (Fast inference)
# -----------------------------------------------------------------------------
# Get your API key from Groq Console
# https://console.groq.com/keys

# GROQ_API_KEY=
# GROQ_MODEL=llama-3.3-70b-versatile
# Available models: 
#   - llama-3.3-70b-versatile (latest, best quality)
#   - llama-3.1-70b-versatile (stable)
#   - mixtral-8x7b-32768 (long context)
# GROQ_MAX_TOKENS=4096
# GROQ_TEMPERATURE=0.3

# -----------------------------------------------------------------------------
# Option 5: Azure OpenAI (Enterprise)
# -----------------------------------------------------------------------------
# Get your credentials from Azure Portal
# https://portal.azure.com

AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_DEPLOYMENT=gpt-4o-mini
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# -----------------------------------------------------------------------------
# Option 6: Qwen (Alibaba Cloud) - Multilingual support
# -----------------------------------------------------------------------------
# Get your API key from Alibaba Cloud DashScope
# https://dashscope.console.aliyun.com/

# QWEN_API_KEY=
# QWEN_MODEL=qwen-max
# Available models:
#   - qwen-max (best quality)
#   - qwen-plus (balanced)
#   - qwen-turbo (fastest)
#   - qwen-max-longcontext (long context support)
# QWEN_ENDPOINT=https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation
# QWEN_MAX_TOKENS=4096
# QWEN_TEMPERATURE=0.3

# =============================================================================
# Provider Configuration
# =============================================================================
# Multi-provider settings
AI_PROVIDER_PRIORITY=claude,openai,gemini,groq,azure-openai,qwen
AI_AUTO_FALLBACK=true
AI_MAX_RETRIES=2

# -----------------------------------------------------------------------------
# Deprecated: The options below have been consolidated above
# -----------------------------------------------------------------------------
# The Google Gemini and Groq sections have been moved above
# Please use the consolidated configuration at the top of this file

# =============================================================================
# Supabase Configuration (Optional)
# =============================================================================
# If configured, analysis results will be stored in Supabase
# Otherwise, results will be stored in local JSON files (data/results.json)
# Get your credentials from Supabase Dashboard
# https://app.supabase.com

# NEXT_PUBLIC_SUPABASE_URL=
# NEXT_PUBLIC_SUPABASE_ANON_KEY=

# =============================================================================
# Prisma Database Configuration
# =============================================================================
# Prisma ORM requires a DATABASE_URL for database connection
# For Supabase: Use the connection string from your Supabase project settings
# For local PostgreSQL: Use the format below
# Note: This is required for Prisma migrations and database operations

# DATABASE_URL="postgresql://postgres:[password]@db.[project-ref].supabase.co:5432/postgres"
# DATABASE_URL="postgresql://user:password@localhost:5432/dermassist"

# =============================================================================
# Database Setup Instructions (Supabase)
# =============================================================================
# Run these SQL commands in Supabase SQL Editor to create required tables:
#
# -- Analysis results table
# CREATE TABLE analysis_results (
#   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
#   provider_name TEXT NOT NULL,
#   model_output JSONB NOT NULL,
#   parsed_output JSONB,
#   image_url TEXT,
#   metadata JSONB
# );
#
# -- Enable Row Level Security
# ALTER TABLE analysis_results ENABLE ROW LEVEL SECURITY;
#
# -- Create policy to allow all operations (adjust for production)
# CREATE POLICY "Allow all operations" ON analysis_results
#   FOR ALL USING (true) WITH CHECK (true);
#
# -- Provider configurations table (for future use)
# CREATE TABLE provider_configs (
#   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
#   provider_type TEXT NOT NULL,
#   config_data JSONB NOT NULL,
#   is_active BOOLEAN DEFAULT false,
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
# );
#
# ALTER TABLE provider_configs ENABLE ROW LEVEL SECURITY;

# For Next.js client-side access (if needed - NOT recommended for production)
# NEXT_PUBLIC_AZURE_OPENAI_API_KEY=your_key_here

# =============================================================================
# Authentication Configuration (Clerk)
# =============================================================================
# Get your credentials from Clerk Dashboard
# https://dashboard.clerk.com
#
# After creating a Clerk application:
# 1. Copy the API keys from the API Keys section
# 2. Configure the following environment variables
# 3. Set up roles in Clerk Dashboard under "Roles & Permissions"
#    - Create 'admin' role for admin portal access
#    - Create 'user' role (default) for regular users
# 4. Configure the sign-in and sign-up URLs as needed
#
# Required for authentication to work:
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
CLERK_SECRET_KEY=

# Optional - Customize the sign-in/sign-up pages
# NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
# NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
# NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
# NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# =============================================================================
# Protected Routes Configuration
# =============================================================================
# The following routes are protected by authentication:
# - /demo - Submit case (requires authentication)
# - /practice-feed - Educational case studies (requires authentication)
# - /admin - Admin portal (requires 'admin' role)
#
# To assign admin role to a user:
# 1. Go to Clerk Dashboard > Users
# 2. Select a user
# 3. Go to "Roles" tab
# 4. Assign the 'admin' role
