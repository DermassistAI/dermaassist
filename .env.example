# =============================================================================
# AI Provider Configuration
# =============================================================================
# Configure ONE of the following AI providers by setting the required variables
# The application will automatically detect and use the configured provider
# Priority: Google Gemini > Groq > Azure OpenAI (default)

# -----------------------------------------------------------------------------
# Option 1: Azure OpenAI (Default)
# -----------------------------------------------------------------------------
# Get your credentials from Azure Portal
# https://portal.azure.com

AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_DEPLOYMENT=gpt-4o-mini
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# -----------------------------------------------------------------------------
# Option 2: Google Gemini (via AI Studio)
# -----------------------------------------------------------------------------
# Get your API key from Google AI Studio
# https://aistudio.google.com/app/apikey

# GOOGLE_GEMINI_API_KEY=
# GOOGLE_GEMINI_MODEL=gemini-1.5-flash
# Available models: gemini-1.5-flash, gemini-1.5-pro, gemini-2.0-flash

# -----------------------------------------------------------------------------
# Option 3: Groq (Fast inference)
# -----------------------------------------------------------------------------
# Get your API key from Groq Console
# https://console.groq.com/keys

# GROQ_API_KEY=
# GROQ_MODEL=llama-3.3-70b-versatile
# Available models: llama-3.3-70b-versatile, mixtral-8x7b-32768, llama-3.1-70b-versatile

# =============================================================================
# Supabase Configuration (Optional)
# =============================================================================
# If configured, analysis results will be stored in Supabase
# Otherwise, results will be stored in local JSON files (data/results.json)
# Get your credentials from Supabase Dashboard
# https://app.supabase.com

# NEXT_PUBLIC_SUPABASE_URL=
# NEXT_PUBLIC_SUPABASE_ANON_KEY=

# =============================================================================
# Database Setup Instructions (Supabase)
# =============================================================================
# Run these SQL commands in Supabase SQL Editor to create required tables:
#
# -- Analysis results table
# CREATE TABLE analysis_results (
#   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
#   provider_name TEXT NOT NULL,
#   model_output JSONB NOT NULL,
#   parsed_output JSONB,
#   image_url TEXT,
#   metadata JSONB
# );
#
# -- Enable Row Level Security
# ALTER TABLE analysis_results ENABLE ROW LEVEL SECURITY;
#
# -- Create policy to allow all operations (adjust for production)
# CREATE POLICY "Allow all operations" ON analysis_results
#   FOR ALL USING (true) WITH CHECK (true);
#
# -- Provider configurations table (for future use)
# CREATE TABLE provider_configs (
#   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
#   provider_type TEXT NOT NULL,
#   config_data JSONB NOT NULL,
#   is_active BOOLEAN DEFAULT false,
#   created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
# );
#
# ALTER TABLE provider_configs ENABLE ROW LEVEL SECURITY;

# For Next.js client-side access (if needed - NOT recommended for production)
# NEXT_PUBLIC_AZURE_OPENAI_API_KEY=your_key_here
